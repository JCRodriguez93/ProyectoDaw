openapi: 3.0.0
info:
  title: API de Gestión de Productos para Tatuajes
  description: API para manejar usuarios, roles, productos, categorías, pedidos y más.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Servidor local

paths:
  /roles:
    get:
      summary: Listar roles
      operationId: getRoles
      tags:
        - Roles
      responses:
        '200':
          description: Lista de roles obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /users:
    get:
      summary: Listar usuarios
      operationId: getUsers
      tags:
        - Usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear un nuevo usuario
      operationId: createUser
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflicto (por ejemplo, email ya registrado)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{userId}:
    put:
      summary: Actualizar un usuario existente
      operationId: updateUser
      tags:
        - Usuarios
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuario no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar un usuario
      operationId: deleteUser
      tags:
        - Usuarios
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Usuario eliminado con éxito
        '404':
          description: Usuario no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories:
    get:
      summary: Listar categorías
      operationId: getCategories
      tags:
        - Categorías
      responses:
        '200':
          description: Lista de categorías obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron categorías
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear una nueva categoría
      operationId: createCategory
      tags:
        - Categorías
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Categoría creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflicto (por ejemplo, categoría ya existe)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories/{categoryId}:
    put:
      summary: Actualizar una categoría
      operationId: updateCategory
      tags:
        - Categorías
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nueva categoría"
                description:
                  type: string
                  example: "Descripción actualizada de la categoría."
      responses:
        '200':
          description: Categoría actualizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Categoría no encontrada (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar una categoría
      operationId: deleteCategory
      tags:
        - Categorías
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Categoría eliminada con éxito
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Categoría no encontrada (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /subcategory:
    get:
      summary: Listar subcategorías
      operationId: getSubcategories
      tags:
        - Subcategorías
      responses:
        '200':
          description: Lista de subcategorías obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron subcategorías
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear una nueva subcategoría
      operationId: createSubcategory
      tags:
        - Subcategorías
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subcategory'
      responses:
        '201':
          description: Subcategoría creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflicto (por ejemplo, la subcategoría ya existe)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subcategory/{subcategoryId}:
    put:
      summary: Actualizar una subcategoría
      operationId: updateSubcategory
      tags:
        - Subcategorías
      parameters:
        - in: path
          name: subcategoryId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nuevo nombre de subcategoría"
                description:
                  type: string
                  example: "Descripción actualizada de la subcategoría."
      responses:
        '200':
          description: Subcategoría actualizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Subcategoría no encontrada (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar una subcategoría
      operationId: deleteSubcategory
      tags:
        - Subcategorías
      parameters:
        - in: path
          name: subcategoryId
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Subcategoría eliminada con éxito
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Subcategoría no encontrada (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'






  /products:
    get:
      summary: Listar productos
      operationId: getProducts
      tags:
        - Productos
      responses:
        '200':
          description: Lista de productos obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron productos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear un nuevo producto
      operationId: createProduct
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Subcategoría no encontrada (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /products/{productId}:
    put:
      summary: Actualizar un producto
      operationId: updateProduct
      tags:
        - Productos
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nuevo nombre de producto"
                description:
                  type: string
                  example: "Descripción actualizada del producto."
                price:
                  type: number
                  format: float
                  example: 100.50
                subcategoryId:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Producto actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Producto no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar un producto
      operationId: deleteProduct
      tags:
        - Productos
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Producto eliminado con éxito
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Producto no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /orders:
    get:
      summary: Listar pedidos
      operationId: getOrders
      tags:
        - Pedidos
      responses:
        '200':
          description: Lista de pedidos obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron pedidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Crear un nuevo pedido
      operationId: createOrder
      tags:
        - Pedidos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Pedido creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /orders/{orderId}:
    put:
      summary: Actualizar un pedido
      operationId: updateOrder
      tags:
        - Pedidos
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pendiente, pagado, cancelado]
                  example: "pagado"
      responses:
        '200':
          description: Pedido actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Datos inválidos enviados (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Pedido no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar un pedido
      operationId: deleteOrder
      tags:
        - Pedidos
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Pedido eliminado con éxito
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Pedido no encontrado (Not Found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /order_details:
    get:
      summary: Listar detalles de pedidos
      operationId: getOrderDetails
      tags:
        - Detalles de pedidos
      responses:
        '200':
          description: Lista de detalles de pedidos obtenida con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetail'
        '400':
          description: Solicitud inválida (Bad Request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: No se encontraron detalles de pedidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor (Internal Server Error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'




components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Descripción del error ocurrido"
    Role:
      type: object
      properties:
        id_role:
          type: integer
          example: 1
        role_name:
          type: string
          example: "Administrador"
    User:
      type: object
      properties:
        id_user:
          type: integer
          example: 1
        user_name:
          type: string
          example: "Juan Pérez"
        email:
          type: string
          format: email
          example: "juan.perez@example.com"
        password:
          type: string
          format: password
          example: "123456"
        role_id:
          type: integer
          example: 1
    Category:
      type: object
      properties:
        id_category:
          type: integer
          example: 1
        category_name:
          type: string
          example: "Máquinas de Tatuar"
    Product:
      type: object
      properties:
        id_product:
          type: integer
          example: 1
        product_name:
          type: string
          example: "Máquina de Tatuaje"
        price:
          type: number
          format: float
          example: 199.99
        category_id:
          type: integer
          example: 1
    Order:
      type: object
      properties:
        id_order:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        total_price:
          type: number
          format: float
          example: 299.99
        order_date:
          type: string
          format: date
          example: "2024-11-28"
    OrderDetail:
      type: object
      properties:
        id_order_detail:
          type: integer
          example: 1
        order_id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 2
        total_price:
          type: number
          format: float
          example: 399.98
    Subcategory:
      type: object
      properties:
        id_subcategory:
          type: integer
          example: 1
        subcategory_name:
          type: string
          example: "Subcategoría de Tatuajes"
        category_id:
          type: integer
          example: 1
