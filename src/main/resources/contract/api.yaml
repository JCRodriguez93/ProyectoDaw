openapi: 3.0.0
info:
  title: API de Gestión de Roles
  description: API para manejar roles en el sistema de productos de tatuajes.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Servidor local
paths:
  /roles:
    get:
      summary: Obtener todos los roles
      description: "Solo los usuarios con rol ADMIN pueden obtener todos los roles."
      operationId: getRoles
      tags:
        - Roles
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RoleResponse
                properties:
                  Roles:
                    type: array
                    description: Lista de roles
                    items:
                      $ref: "#/components/schemas/Role"

        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Acceso denegado (Forbidden)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /roles/{idRole}:
    put:
      summary: Actualizar un rol existente
      description: "Solo los usuarios con rol ADMIN pueden actualizar un rol."
      operationId: putRoleId
      tags:
        - Roles
      parameters:
        - in: path
          name: idRole
          required: true
          schema:
            type: string
          description: identificador del rol
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        '200':
          description: Rol actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Datos inválidos enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Acceso denegado (Forbidden)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rol no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /Users:
    get:
      summary: Obtener todos los usuarios
      description: "Solo los usuarios con rol ADMIN pueden obtener todos los usuarios."
      operationId: getUsers
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UserResponse
                properties:
                  Users:
                    type: array
                    description: Lista de usuarios
                    items:
                      $ref: "#/components/schemas/User"

        '401':
          description: No autorizado (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Acceso denegado (Forbidden)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /Category:
    get:
      summary: Obtener todas las categorías
      description: "Permite a cualquier usuario obtener la lista de categorías disponibles."
      operationId: getCategories
      tags:
        - Categories
      responses:
        "200":
          description: Lista de categorías obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                title: CategoriesResponse
                properties:
                  categories:
                    type: array
                    description: Lista de categorías disponibles
                    items:
                      $ref: "#/components/schemas/Category"
        "404":
          description: No se encontraron categorías
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /Subcategory:
    get:
      summary: Obtener todas las subcategorías
      description: "Permite a cualquier usuario obtener la lista de subcategorías disponibles."
      operationId: getSubcategories
      tags:
        - Subcategories
      responses:
        "200":
          description: Lista de subcategorías obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                title: SubcategoriesResponse
                properties:
                  subcategories:
                    type: array
                    description: Lista de subcategorías disponibles
                    items:
                      $ref: "#/components/schemas/Subcategory"
        "404":
          description: No se encontraron subcategorías
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /Products:
    get:
      summary: Obtener todos los productos
      description: "Permite a cualquier usuario obtener la lista de productos disponibles."
      operationId: getProducts
      tags:
        - Products
      responses:
        "200":
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                title: ProductsResponse
                properties:
                  products:
                    type: array
                    description: Lista de productos disponibles
                    items:
                      $ref: "#/components/schemas/Products"
        "404":
          description: No se encontraron productos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'







components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:

    Role:
      type: object
      properties:
        idRole:
          type: integer
          format: int32
          description: Identificador único del rol
        roleName:
          type: string
          description: Nombre del rol

    User:
      type: object
      properties:
        idUser:
          type: integer
          format: int32
          description: Identificador único del usuario
        userName:
          type: string
          description: Nombre del usuario
          maxLength: 50
        email:
          type: string
          format: email
          description: Correo electrónico único del usuario
          maxLength: 100
        password:
          type: string
          description: Contraseña del usuario en formato hash
          maxLength: 255
        roleId:
          type: integer
          description: id del usuario
          maxLength: 1

    Category:
      type: object
      properties:
        idCategory:
          type: integer
          format: int32
          description: Identificador único de la categoría
        name:
          type: string
          description: Nombre de la categoría
          maxLength: 50
        description:
          type: string
          description: Descripción de la categoría
        subcategories:
          type: array
          description: Lista de subcategorías asociadas a la categoría
          items:
            $ref: '#/components/schemas/Subcategory'

    Subcategory:
      type: object
      properties:
        idSubcategory:
          type: integer
          format: int32
          description: Identificador único de la subcategoría
        name:
          type: string
          description: Nombre de la subcategoría
          maxLength: 50
        description:
          type: string
          description: Descripción de la subcategoría

    Products:
      type: object
      properties:
        idProduct:
          type: integer
          format: int32
          description: Identificador único del producto
        idSubcategory:
          type: integer
          format: int32
          description: Identificador único de la subcategoría asociada
        name:
          type: string
          description: Nombre del producto
          maxLength: 100
        description:
          type: string
          description: Descripción detallada del producto
        price:
          type: number
          format: float
          description: Precio del producto con hasta dos decimales
      required:
        - idSubcategory
        - name
        - price








    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: Código del error
        errorMessage:
          type: string
          description: Descripción del error
security:
  - bearerAuth: []
